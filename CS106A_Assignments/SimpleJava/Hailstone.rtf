{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf370
{\fonttbl\f0\fmodern\fcharset0 CourierNewPSMT;\f1\fmodern\fcharset0 CourierNewPS-BoldMT;\f2\fswiss\fcharset0 Helvetica;
}
{\colortbl;\red255\green255\blue255;\red255\green255\blue255;\red15\green114\blue3;\red10\green82\blue135;
\red217\green217\blue217;\red109\green109\blue109;\red0\green0\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl260

\f0\fs24 \cf0 \cb2 \'a0\cf3 * File: Hailstone.java\cf0 \
\'a0\cf3 * Name: Javier Palomares\cf0 \
\'a0\cf3 * Section Leader: Lekan Wang\cf0 \
\'a0\cf3 * --------------------\cf0 \
\'a0\cf3 * Hailstone.java shows the Hailstone sequence for a user input \cf0 \
\'a0\cf3 * positive integer.\cf0 \
\'a0\cf3 */\cf0 \
\'a0\
import acm.program.*;\
\pard\pardeftab720\sl260

\f1\b \cf4 public
\f0\b0 \cf0  
\f1\b \cf4 class
\f0\b0 \cf0  Hailstone extends ConsoleProgram \{\
\pard\pardeftab720\sl260
\cf0 \cb5 \'a0\'a0\'a0\'a0
\f1\b \cf4 public
\f0\b0 \cf0  
\f1\b \cf4 void
\f0\b0 \cf0  run() \{\
\pard\pardeftab720\sl260\sa240

\f2 \cf0 \cb2 Cool!\
\pard\pardeftab720\sl220

\i\fs20 \cf0 Lekan Wang (lekanw)\
\pard\pardeftab720\sl260

\f0\i0\fs24 \cf0 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0
\f1\b \cf6 int
\f0\b0 \cf0  num=readInt(\cf7 "Enter positive integer: "\cf0 );\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0
\f1\b \cf6 int
\f0\b0 \cf0  numSteps=0;\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0
\f1\b \cf4 while
\f0\b0 \cf0 (
\f1\b \cf4 true
\f0\b0 \cf0 )\{\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf3 // terminates sequences once num=1\cf0 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0
\f1\b \cf4 if
\f0\b0 \cf0 (num==1)\{\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0
\f1\b \cf4 break
\f0\b0 \cf0 ;\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\}\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf3 // if num is even divide by 2\cf0 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0
\f1\b \cf4 if
\f0\b0 \cf0 (num%2==0)\{\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0
\f1\b \cf6 int
\f0\b0 \cf0  newNum= num/2;\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0println(num + \cf7 " is even, so I take half: "\cf0  + newNum);\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0num=newNum;\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\}\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf3 //if num is odd multiply by 3 and add 1\cf0 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0
\f1\b \cf4 else
\f0\b0 \cf0 \{\
\pard\pardeftab720\sl260
\cf0 \cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0
\f1\b \cf6 int
\f0\b0 \cf0  newNum= 3*num + 1;\
\pard\pardeftab720\sl260\sa240

\f2 \cf0 \cb2 int new = 3 * num + 1;\
\pard\pardeftab720\sl220

\i\fs20 \cf0 Lekan Wang (lekanw)\
\pard\pardeftab720\sl260

\f0\i0\fs24 \cf0 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0println( num + \cf7 " is odd, so I make 3n+1: "\cf0  + newNum);\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0num=newNum;\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\}\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0numSteps++;\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\}\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0println( \cf7 "The process took "\cf0  + numSteps+ \cf7 " steps to reach 1."\cf0 );\
\'a0\'a0\'a0\'a0\}\
\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\'a0\
\'a0\
\}\
}